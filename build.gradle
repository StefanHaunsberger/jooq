buildscript {
	ext {
		springBootVersion = '2.4.3'
	}
    // configurations['classpath'].resolutionStrategy.eachDependency {
    //     if (requested.group == 'org.jooq') {
    //         useVersion '3.14.8'
    //     }
    // }
	repositories {
		mavenCentral()
        jcenter()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

plugins {
	id 'org.springframework.boot' version '2.4.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'nu.studer.jooq' version '5.2.1'
	id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
    jcenter()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	// implementation('org.springframework.boot:spring-boot-starter-jooq') {
    //     exclude group: 'org.jooq', module: 'jooq'
    // }
    
    runtimeOnly 'com.h2database:h2'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
	// implementation 'org.jooq:jooq-meta-extensions-hibernate'
    // jooqGenerator 'com.h2database:h2:1.4.200'
	// jooqGenerator 'org.jooq:jooq-codegen'
	// jooqGenerator 'org.jooq:jooq-meta-extensions'
	// jooqGenerator 'com.h2database:h2:1.4.200'
	jooqGenerator 'org.jooq:jooq-meta-extensions-hibernate'

	// implementation 'org.jooq:jooq-meta-extensions'
	implementation 'org.jooq:jooq-codegen'
    implementation 'org.jooq:jooq-meta-extensions-hibernate'
}

test {
	useJUnitPlatform()
}

jooq {
    // use jOOQ version defined in Spring Boot
    // version = dependencyManagement.importedProperties['jooq.version']
    version = '3.14.8'  // the default (can be omitted)
    // edition = nu.studer.gradle.jooq.JooqEdition.OSS  // the default (can be omitted)
    configurations {
        main {
            generationTool {
                // logging = org.jooq.meta.jaxb.Logging.WARN
                generator {
                    name = 'org.jooq.codegen.DefaultGenerator'
                    strategy {
                        name = 'org.jooq.codegen.DefaultGeneratorStrategy'
                    }
                    database {
                        name = 'org.jooq.meta.extensions.jpa.JPADatabase'
                        properties {
                            property {
                                key = 'packages'
                                value = 'com.example.jooq.entities'
                            }
                            property {
                                key = 'useAttributeConverters'
                                value = true
                            }
                        }
                    }
                    generate {
                    }
                    target {
                        // packageName = 'com.example.jooq.entities.jooq'
                        // directory = 'target/generated-sources/jooq'
                        packageName = 'nu.studer.sample'
                        directory = 'src/generated/jooq'
                    }
                }
            }
        }
    }
}

tasks.named('generateJooq').configure {
    // make jOOQ task participate in incremental builds (which is also a prerequisite for participating in build caching)
    allInputsDeclared = true

    // make jOOQ task participate in build caching
    outputs.cacheIf { true }
}